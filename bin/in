#!/bin/bash
set -e
set -o pipefail
exec 3>&1 # use fd 3 for script output
exec 1>&2 # send normal stdout to stderr for logging

# shellcheck source=bin/common.sh
source "$( dirname "$( readlink -f "$0" )")"/common.sh

# get kube resource id
NAMESPACE=$(jq -r ".params.namespace // \"$NAMESPACE\"" < "$payload")

NAMESPACE_FILE=$(jq -r ".params.namespace_file // \"\"" < "$payload")
if [[ -n "$NAMESPACE_FILE" ]]; then
    if [ -e "$NAMESPACE_FILE" ]; then
        NAMESPACE=$(head -n1 < "$NAMESPACE_FILE" | tr -d " ")
    else
        echo "Namespace file '$NAMESPACE_FILE' does not exist."
        exit 1
    fi
fi

VERSION=$(jq -r '.version' < "$payload")
echo "Version: ${VERSION}"

if [[ -z "$NAMESPACE" ]]; then
    result="$(jq -n "{version:{name:\"none\"}}")"
else
    export KUBECTL

    RESOURCE="namespace/$NAMESPACE"
    data="$(mktemp "$TMPDIR/k8s-resource-data.XXXXXX")"
    $KUBECTL get -o json "$RESOURCE" > "$data" || true # if there are errors or namespace missing, return empty.

    ANNOTATIONS=$(jq -r "$GET_ANNOTATIONS" < "$data" | tr -d \")
    LABELS=$(jq -r "$GET_LABELS" < "$data" | tr -d \")

    result="$(jq -n "{version:{name:\"$NAMESPACE\",annotations:\"$ANNOTATIONS\",labels:\"$LABELS\"}}")"
fi

echo "$result" | jq -s add >&3
